// Indicators of Compromise (IOC) - Learning to identify and extract threat indicators

import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { DocumentMagnifyingGlassIcon, CheckCircleIcon, XCircleIcon } from '@heroicons/react/24/outline';

const IOCSection: React.FC = () => {
  const [iocExercise, setIocExercise] = useState('');
  const [iocResult, setIocResult] = useState('');
  const [multiIOC, setMultiIOC] = useState({
    ip: '',
    domain: '',
    hash: '',
    mutex: ''
  });
  const [multiResult, setMultiResult] = useState('');
  const [iocTypeQuiz, setIocTypeQuiz] = useState<Record<string, string>>({});
  const [typeQuizSubmitted, setTypeQuizSubmitted] = useState(false);

  const checkIOC = () => {
    if (iocExercise.includes('198.51.100.42') || iocExercise.includes('198.51.100')) {
      setIocResult('correct');
    } else {
      setIocResult('incorrect');
    }
  };

  const checkMultiIOC = () => {
    const correct = 
      multiIOC.ip.includes('203.0.113.25') &&
      multiIOC.domain.toLowerCase().includes('malware-c2.badguy.com') &&
      multiIOC.hash.toLowerCase().includes('5d41402abc4b2a76b9719d911017c592') &&
      multiIOC.mutex.includes('Global\\Malware_Mutex_X9');
    
    setMultiResult(correct ? 'correct' : 'incorrect');
  };

  const iocTypes = [
    { indicator: '192.168.1.100', type: 'IP Address' },
    { indicator: 'evil.example.com', type: 'Domain Name' },
    { indicator: 'C:\\Windows\\malware.exe', type: 'File Path' },
    { indicator: '5d41402abc4b2a76b9719d911017c592', type: 'File Hash' }
  ];

  const checkTypeQuiz = () => setTypeQuizSubmitted(true);

  const allTypesCorrect = 
    iocTypeQuiz['0'] === 'IP Address' &&
    iocTypeQuiz['1'] === 'Domain Name' &&
    iocTypeQuiz['2'] === 'File Path' &&
    iocTypeQuiz['3'] === 'File Hash';

  return (
    <div className="space-y-6">
      <div className="bg-atom-bg bg-opacity-50 rounded-lg p-6 border-l-4 border-atom-green">
        <h3 className="text-2xl font-bold text-atom-green mb-4 flex items-center">
          <DocumentMagnifyingGlassIcon className="h-8 w-8 mr-3" />
          Indicators of Compromise (IOCs)
        </h3>
        <p className="text-lg text-atom-fg-muted mb-4">
          IOCs are digital "fingerprints" left behind by malware. Just like detectives collect evidence 
          at crime scenes, security analysts collect IOCs to detect infections, track threat actors, 
          and protect other systems!
        </p>
        <div className="bg-blue-900 bg-opacity-20 p-4 rounded border border-blue-500 border-opacity-30">
          <p className="text-blue-300 text-sm">
            <strong>💡 Real World:</strong> When a major ransomware attack happens, security companies 
            share IOCs globally so everyone can block the threat. It's like a "most wanted" poster for malware!
          </p>
        </div>
      </div>

      <div className="grid md:grid-cols-2 gap-6">
        <div className="bg-blue-900 bg-opacity-20 rounded-lg p-6 border border-blue-500 border-opacity-30">
          <h4 className="text-blue-400 font-bold text-xl mb-3">📍 Common IOC Types</h4>
          <ul className="space-y-2 text-blue-300 text-sm">
            <li className="p-2 bg-blue-900 bg-opacity-20 rounded">
              <strong>🌐 IP Addresses:</strong> Where malware connects (C2 servers)
            </li>
            <li className="p-2 bg-blue-900 bg-opacity-20 rounded">
              <strong>🔗 Domain Names:</strong> Command & control infrastructure
            </li>
            <li className="p-2 bg-blue-900 bg-opacity-20 rounded">
              <strong>📁 File Hashes:</strong> Unique signatures (MD5, SHA256)
            </li>
            <li className="p-2 bg-blue-900 bg-opacity-20 rounded">
              <strong>📂 File Paths:</strong> Where malware installs itself
            </li>
            <li className="p-2 bg-blue-900 bg-opacity-20 rounded">
              <strong>🔑 Registry Keys:</strong> Windows persistence mechanisms
            </li>
            <li className="p-2 bg-blue-900 bg-opacity-20 rounded">
              <strong>🔢 Mutexes:</strong> Unique process identifiers
            </li>
          </ul>
        </div>

        <div className="bg-purple-900 bg-opacity-20 rounded-lg p-6 border border-purple-500 border-opacity-30">
          <h4 className="text-purple-400 font-bold text-xl mb-3">🛡️ How IOCs Help</h4>
          <ul className="space-y-2 text-purple-300 text-sm">
            <li className="p-2 bg-purple-900 bg-opacity-20 rounded">
              <strong>🔍 Detection:</strong> Find infected systems in your network
            </li>
            <li className="p-2 bg-purple-900 bg-opacity-20 rounded">
              <strong>🚫 Prevention:</strong> Block known malicious IPs/domains
            </li>
            <li className="p-2 bg-purple-900 bg-opacity-20 rounded">
              <strong>📊 Tracking:</strong> Monitor threat campaigns over time
            </li>
            <li className="p-2 bg-purple-900 bg-opacity-20 rounded">
              <strong>🤝 Sharing:</strong> Warn other organizations
            </li>
            <li className="p-2 bg-purple-900 bg-opacity-20 rounded">
              <strong>⚡ Response:</strong> Speed up incident remediation
            </li>
          </ul>
        </div>
      </div>

      <div className="bg-atom-bg bg-opacity-50 rounded-lg p-6 border border-atom-purple border-opacity-30">
        <h4 className="text-atom-purple font-bold text-xl mb-4">🎮 Exercise: Identify IOC Types</h4>
        <p className="text-atom-fg-muted mb-4">
          Match each indicator to its type:
        </p>
        
        <div className="space-y-3">
          {iocTypes.map((item, index) => (
            <div key={index} className="bg-atom-bg bg-opacity-50 p-4 rounded border border-atom-purple border-opacity-30">
              <p className="text-atom-fg font-mono text-sm mb-2 bg-black bg-opacity-40 p-2 rounded">
                {item.indicator}
              </p>
              <div className="flex gap-2 flex-wrap">
                {['IP Address', 'Domain Name', 'File Path', 'File Hash'].map(type => (
                  <label 
                    key={type}
                    className={`px-3 py-1 rounded cursor-pointer text-sm transition-colors ${
                      iocTypeQuiz[index] === type
                        ? 'bg-atom-purple text-white'
                        : 'bg-atom-bg text-atom-fg hover:bg-opacity-70'
                    }`}
                  >
                    <input
                      type="radio"
                      name={`ioc-${index}`}
                      value={type}
                      checked={iocTypeQuiz[index] === type}
                      onChange={(e) => setIocTypeQuiz({...iocTypeQuiz, [index]: e.target.value})}
                      className="sr-only"
                    />
                    {type}
                  </label>
                ))}
              </div>
            </div>
          ))}
        </div>

        <button
          onClick={checkTypeQuiz}
          disabled={Object.keys(iocTypeQuiz).length < 4}
          className="mt-4 px-6 py-2 bg-atom-purple text-white rounded hover:bg-opacity-80 transition-colors disabled:opacity-50"
        >
          Check Answers
        </button>

        {typeQuizSubmitted && (
          <motion.div
            initial={{ opacity: 0, y: -10 }}
            animate={{ opacity: 1, y: 0 }}
            className={`mt-4 p-4 rounded ${allTypesCorrect ? 'bg-green-900 bg-opacity-20 border border-green-500' : 'bg-yellow-900 bg-opacity-20 border border-yellow-500'}`}
          >
            {allTypesCorrect ? (
              <div className="text-green-400">
                <CheckCircleIcon className="h-6 w-6 inline mr-2" />
                <span className="font-bold">Perfect! 🎉</span>
                <p className="text-sm mt-1">You correctly identified all IOC types!</p>
              </div>
            ) : (
              <div className="text-yellow-300">
                <span className="font-bold">Review your answers:</span>
                <p className="text-sm mt-1">
                  Look at the format of each indicator: IPs use numbers with dots, domains have dots and letters, 
                  file paths show directories, and hashes are long hexadecimal strings.
                </p>
              </div>
            )}
          </motion.div>
        )}
      </div>

      <div className="bg-atom-bg bg-opacity-50 rounded-lg p-6 border border-atom-orange border-opacity-30">
        <h4 className="text-atom-orange font-bold text-xl mb-4">🔍 Challenge: Extract IOC from Report</h4>
        <p className="text-atom-fg-muted mb-4">
          Review this malware analysis report and identify the malicious IP address:
        </p>

        <div className="bg-black bg-opacity-40 p-4 rounded font-mono text-sm text-cyan-400 mb-4 overflow-x-auto">
          <pre>{`═══ MALWARE ANALYSIS REPORT ═══
Sample: crypto_miner.exe
Classification: Cryptocurrency Miner / Trojan

File Information:
  MD5: a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6
  SHA256: 9876543210abcdef...
  Size: 2.4 MB
  Type: PE32 Executable

Behavioral Analysis:
  - High CPU usage (98%)
  - Creates hidden process: svchost32.exe
  - Modifies Windows Firewall rules
  - Network Activity:
    * DNS lookup: pool.mining-server.xyz
    * TCP connection to: 198.51.100.42:8080
    * WebSocket connection maintained
    * Outbound traffic: 45 KB/s

Persistence Mechanism:
  - Registry: HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run
  - Scheduled Task: "SystemUpdate_v2"

Threat Level: MEDIUM
Recommendation: Block IP and remove persistence`}</pre>
        </div>

        <div className="space-y-3">
          <label className="block text-atom-orange font-bold">
            What is the malicious IP address to block?
          </label>
          <input
            type="text"
            value={iocExercise}
            onChange={(e) => setIocExercise(e.target.value)}
            placeholder="Enter IP address..."
            className="w-full bg-atom-bg border border-atom-orange rounded px-4 py-2 text-atom-fg font-mono"
          />
          <button
            onClick={checkIOC}
            className="px-6 py-2 bg-atom-orange text-white rounded hover:bg-opacity-80 transition-colors"
          >
            Submit IOC
          </button>

          {iocResult && (
            <motion.div
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              className={`p-4 rounded ${
                iocResult === 'correct'
                  ? 'bg-green-900 bg-opacity-20 border border-green-500'
                  : 'bg-red-900 bg-opacity-20 border border-red-500'
              }`}
            >
              {iocResult === 'correct' ? (
                <div className="text-green-400">
                  <CheckCircleIcon className="h-6 w-6 inline mr-2" />
                  <span className="font-bold">Correct! 🎯</span>
                  <p className="text-sm mt-1">
                    198.51.100.42 is the mining pool server. Blocking this IP prevents infected 
                    machines from mining cryptocurrency for attackers!
                  </p>
                </div>
              ) : (
                <div className="text-red-400">
                  <XCircleIcon className="h-6 w-6 inline mr-2" />
                  <span className="font-bold">Not quite!</span>
                  <p className="text-sm mt-1">
                    Look in the "Network Activity" section for the TCP connection IP address.
                  </p>
                </div>
              )}
            </motion.div>
          )}
        </div>
      </div>

      <div className="bg-atom-bg bg-opacity-50 rounded-lg p-6 border border-atom-blue border-opacity-30">
        <h4 className="text-atom-blue font-bold text-xl mb-4">🏆 Advanced Challenge: Multiple IOC Extraction</h4>
        <p className="text-atom-fg-muted mb-4">
          Extract ALL relevant IOCs from this incident report:
        </p>

        <div className="bg-black bg-opacity-40 p-4 rounded font-mono text-xs text-cyan-400 mb-4 overflow-x-auto">
          <pre>{`═══ INCIDENT RESPONSE REPORT ═══
Incident ID: INC-2025-0142
Type: Ransomware Attack

Initial Infection Vector:
  Phishing email with malicious attachment: invoice_final.docx.exe

Malware Details:
  File Hash (MD5): 5d41402abc4b2a76b9719d911017c592
  Mutex Created: Global\\Malware_Mutex_X9
  
Command & Control:
  Primary C2: malware-c2.badguy.com
  IP Address: 203.0.113.25
  Port: 443 (HTTPS)
  User-Agent: "Mozilla/5.0 (Malware/1.0)"

Files Modified:
  - All *.docx, *.xlsx, *.pdf encrypted with .locked extension
  - Ransom note: YOUR_FILES_ARE_ENCRYPTED.txt
  
Registry Modifications:
  - HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\MalwareService
  
Network Indicators:
  - Exfiltrated 127 MB of data before encryption
  - Bitcoin wallet: 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa`}</pre>
        </div>

        <div className="space-y-3">
          <div>
            <label className="block text-atom-blue font-bold mb-1">IP Address:</label>
            <input
              type="text"
              value={multiIOC.ip}
              onChange={(e) => setMultiIOC({...multiIOC, ip: e.target.value})}
              placeholder="e.g., 192.168.1.1"
              className="w-full bg-atom-bg border border-atom-blue rounded px-4 py-2 text-atom-fg font-mono text-sm"
            />
          </div>
          <div>
            <label className="block text-atom-blue font-bold mb-1">Domain Name:</label>
            <input
              type="text"
              value={multiIOC.domain}
              onChange={(e) => setMultiIOC({...multiIOC, domain: e.target.value})}
              placeholder="e.g., evil.example.com"
              className="w-full bg-atom-bg border border-atom-blue rounded px-4 py-2 text-atom-fg font-mono text-sm"
            />
          </div>
          <div>
            <label className="block text-atom-blue font-bold mb-1">File Hash (MD5):</label>
            <input
              type="text"
              value={multiIOC.hash}
              onChange={(e) => setMultiIOC({...multiIOC, hash: e.target.value})}
              placeholder="e.g., 5d41402abc4b2a76..."
              className="w-full bg-atom-bg border border-atom-blue rounded px-4 py-2 text-atom-fg font-mono text-sm"
            />
          </div>
          <div>
            <label className="block text-atom-blue font-bold mb-1">Mutex Name:</label>
            <input
              type="text"
              value={multiIOC.mutex}
              onChange={(e) => setMultiIOC({...multiIOC, mutex: e.target.value})}
              placeholder="e.g., Global\\..."
              className="w-full bg-atom-bg border border-atom-blue rounded px-4 py-2 text-atom-fg font-mono text-sm"
            />
          </div>

          <button
            onClick={checkMultiIOC}
            disabled={!multiIOC.ip || !multiIOC.domain || !multiIOC.hash || !multiIOC.mutex}
            className="px-6 py-2 bg-atom-blue text-white rounded hover:bg-opacity-80 transition-colors disabled:opacity-50"
          >
            Submit All IOCs
          </button>

          {multiResult && (
            <motion.div
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              className={`p-4 rounded ${
                multiResult === 'correct'
                  ? 'bg-green-900 bg-opacity-20 border border-green-500'
                  : 'bg-yellow-900 bg-opacity-20 border border-yellow-500'
              }`}
            >
              {multiResult === 'correct' ? (
                <div className="text-green-400">
                  <CheckCircleIcon className="h-6 w-6 inline mr-2" />
                  <span className="font-bold">Excellent work! 🏆</span>
                  <p className="text-sm mt-2">You successfully extracted all critical IOCs:</p>
                  <ul className="text-xs mt-2 space-y-1 font-mono">
                    <li>✓ IP: 203.0.113.25</li>
                    <li>✓ Domain: malware-c2.badguy.com</li>
                    <li>✓ Hash: 5d41402abc4b2a76b9719d911017c592</li>
                    <li>✓ Mutex: Global\\Malware_Mutex_X9</li>
                  </ul>
                  <p className="text-sm mt-2">
                    These IOCs can now be shared with security tools to protect your organization!
                  </p>
                </div>
              ) : (
                <div className="text-yellow-300">
                  <XCircleIcon className="h-6 w-6 inline mr-2" />
                  <span className="font-bold">Some IOCs are incorrect</span>
                  <p className="text-sm mt-1">
                    Review the report carefully. Look for the exact IP, domain, MD5 hash, and mutex name.
                  </p>
                </div>
              )}
            </motion.div>
          )}
        </div>
      </div>

      <div className="bg-green-900 bg-opacity-20 rounded-lg p-6 border border-green-500 border-opacity-30">
        <h4 className="text-green-400 font-bold text-xl mb-3">🎓 IOC Best Practices</h4>
        <ul className="space-y-2 text-green-300 text-sm">
          <li>✓ <strong>Document thoroughly:</strong> Record IOCs with context and timestamps</li>
          <li>✓ <strong>Share responsibly:</strong> Use platforms like VirusTotal, MISP, ThreatConnect</li>
          <li>✓ <strong>Validate IOCs:</strong> False positives can disrupt legitimate services</li>
          <li>✓ <strong>Update regularly:</strong> Threat actors change infrastructure frequently</li>
          <li>✓ <strong>Automate detection:</strong> Integrate IOCs into SIEM, IDS/IPS, firewalls</li>
        </ul>
      </div>
    </div>
  );
};

export default IOCSection;
